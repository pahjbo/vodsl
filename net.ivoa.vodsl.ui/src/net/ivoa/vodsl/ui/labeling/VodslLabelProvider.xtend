/*
* generated by Xtext
*/
package net.ivoa.vodsl.ui.labeling

import com.google.inject.Inject
import net.ivoa.vodsl.vodsl.IncludeDeclaration
import net.ivoa.vodsl.vodsl.PackageDeclaration
import net.ivoa.vodsl.vodsl.Enumeration
import net.ivoa.vodsl.vodsl.ObjectType
import net.ivoa.vodsl.vodsl.Attribute
import net.ivoa.vodsl.vodsl.DataType

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class VodslLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
		
//		  PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_TOOL_BACK)  - could return this....
		
	}


	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//


	def image(IncludeDeclaration ele) {
		'import_wiz.gif'
	}
	def image(PackageDeclaration ele) {
		'PackageDeclaration.gif'
	}
	def image(Enumeration ele) {
		'enum_obj.gif'
	}
	def image(ObjectType ele) {
		'class_obj.gif'
	}
	def image(DataType ele) {
		'data_obj.png'
	}
	def image(Attribute ele) {
		'field_obj.gif'
	}
	
}
