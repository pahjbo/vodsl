/*
 * Formatting for VODSL.
 * generated by Xtext 2.9.1 -modified by  Paul Harrison.
 * 
 */
package net.ivoa.vodsl.formatting2

import com.google.inject.Inject
import net.ivoa.vodsl.services.VodslGrammarAccess
import net.ivoa.vodsl.vodsl.DataType
import net.ivoa.vodsl.vodsl.Enumeration
import net.ivoa.vodsl.vodsl.IncludeDeclaration
import net.ivoa.vodsl.vodsl.ObjectType
import net.ivoa.vodsl.vodsl.PrimitiveType
import net.ivoa.vodsl.vodsl.VoDataModel
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import net.ivoa.vodsl.vodsl.PackageDeclaration
import net.ivoa.vodsl.vodsl.VodslPackage
import net.ivoa.vodsl.vodsl.ModelDeclaration
import net.ivoa.vodsl.vodsl.ReferableElement

/**
 * Formatter for VODSL.
 */
class VodslFormatter extends AbstractFormatter2 {
	
	@Inject extension VodslGrammarAccess

	def dispatch void format(VoDataModel voDataModel, extension IFormattableDocument document) {
		// debugging
		//println(textRegionAccess.toString())
		
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		voDataModel.getModel.format;
		for (IncludeDeclaration includes : voDataModel.getIncludes()) {
			includes.format;
		}
		//trying to find the first of the contents to make sure that there are some lines before
		voDataModel.elements.head.prepend[setNewLines(2, 2, 4);highPriority] 
		for (ReferableElement elements : voDataModel.getElements()) {
			elements.format;
		}
	}
	
		
	def dispatch void format(ModelDeclaration m, extension IFormattableDocument doc) {
		for( k : m.regionFor.keywords('author')){
		    k.prepend[newLine]
		}
	}
	
	def dispatch void format(IncludeDeclaration m, extension IFormattableDocument doc) {
			m.regionFor.keyword('include').prepend[setNewLines(1, 1, 2)]
	      m.regionFor.feature(VodslPackage.Literals.INCLUDE_DECLARATION__IMPORT_URI).append[setNewLines(1, 1, 2)]
	  
	}
	
	def dispatch void format(PackageDeclaration p, extension IFormattableDocument doc) {
    p.prepend[setNewLines(2, 2, 4);highPriority]
    interior(
        p.regionFor.keyword('{').append[newLine].prepend[newLine],
        p.regionFor.keyword('}').prepend[newLine],
        [indent;indent]
    )
    for (element : p.elements) {
        format(element, doc)
        element.prepend[setNewLines(1, 1, 2);lowPriority]
    }
    
 	}
/* for datatype and object */
    def dispatch void format(DataType p, extension IFormattableDocument doc) {
    interior(
        p.regionFor.keyword('{').append[newLine].prepend[newLines = 0; oneSpace],
        p.regionFor.keyword('}').prepend[newLine],
        [indent]
    )
   
    for (e : p.content) {
        format(e, doc)
        e.prepend[setNewLines(1, 1, 2);lowPriority]
    }
     
    
    
    	
    }
    
	
}
